Copyright (C) 2009, 2010, 2011 Simon Josefsson.  Licensed under the GPLv3+.

[NAME]
oathtool \- OATH one-time password tool
[EXAMPLES]
To generate the first event-based (HOTP) one-time password for an all-zero key:

   $ oathtool 00
   328482
   $

To generate the first 10 event-based one-time passwords using the same
secret key which is used in the examples of RFC 4226 use the \-w
(\-\-window) parameter:

   $ oathtool \-w 10 3132333435363738393031323334353637383930
   755224
   287082
   359152
   969429
   338314
   254676
   287922
   162583
   399871
   520489
   403154
   $

In the last output, the counter for the first OTP was 0, the second
OTP had a counter of 1, and so on.

To generate a particular OTP, use the \-c (\-\-counter) parameter to
give the exact position directly:

   $ oathtool -c 5 3132333435363738393031323334353637383930
   254676
   $

To validate a HOTP one-time password supply the OTP last on the
command line:

   $ oathtool \-w 10 3132333435363738393031323334353637383930 969429
   3
   $

The output indicates the counter that was used.  It works by starting
with counter 0 and increment until it founds a match (or not), within
the supplied window of 10 OTPs.

The tool supports time-variant one-time passwords, in so called TOTP
mode.  Usage is similar, but --totp needs to be provided:

   $ oathtool --totp 00
   943388
   $

Don't be alarmed if you do not get the same output, this is because
the output is time variant.

By default the time-step size is 30 seconds, which means you get a new
OTP every 30 seconds.  You may modify this with the \-s
(\-\-time-step-size) parameter:

   $ oathtool --totp --time-step-size=45s 00
   109841
   $

The values are valid ISO\-8601 durations, see:
http://en.wikipedia.org/wiki/ISO_8601#Durations

To get more information about what the tool is using use the \-v
(\-\-verbose) parameter:

   $ oathtool --totp --time-step-size=45s --verbose 00
   Hex secret: 00
   Step size (seconds): 45
   109841
   $

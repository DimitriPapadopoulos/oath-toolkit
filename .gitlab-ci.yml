stages:
 - git-builds
 - tarball-test

Debian:
  image: debian:latest
  stage: git-builds
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq make git autoconf automake libtool bison libpam0g-dev libxmlsec1-dev libxml2-utils help2man gtk-doc-tools dblatex valgrind gengetopt libxml2-dbg datefudge
  script:
  - echo "--suppressions=$(pwd)/libpskc/tests/libpskc.supp" >> ~/.valgrindrc
  - make V=1
  - make check V=1 || (cat */tests/test-suite.log; exit 1)
  - make dist
  - sha224sum oath-toolkit-*.tar.gz
  artifacts:
    expire_in: 2 weeks
    paths:
      - oath-toolkit-*.tar.gz

Ubuntu:
  image: ubuntu:latest
  stage: git-builds
  before_script:
    - apt-get update -qq
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make git autoconf automake libtool bison libpam0g-dev libxmlsec1-dev libxml2-utils help2man gtk-doc-tools dblatex valgrind gengetopt datefudge
  script:
  - echo "--suppressions=$(pwd)/libpskc/tests/libpskc.supp" >> ~/.valgrindrc
  - make V=1
  - make check V=1 || (cat */tests/test-suite.log; exit 1)
  - make syntax-check

Mingw:
  image: debian:latest
  stage: tarball-test
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq make mingw-w64
    - mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
    - echo ':DOSWin:M::MZ::/usr/bin/wine64:' > /proc/sys/fs/binfmt_misc/register
  script:
  - tar xfa oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - ./configure --host=x86_64-w64-mingw32
  - make check V=1 || (cat */tests/test-suite.log; exit 1)

CentOS:
  image: centos:latest
  stage: tarball-test
  before_script:
  - yum -y install make gcc libxml2-devel
  script:
  - tar xfa oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings
  - make check V=1 || (cat */tests/test-suite.log; exit 1)

Alpine:
  image: alpine:latest
  stage: tarball-test
  before_script:
  - echo "ipv6" >> /etc/modules
  - apk update
  - apk add gcc libxml2-dev
  script:
  - tar xfz oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings
  - make check V=1 || (cat */tests/test-suite.log; exit 1)
